{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/sorting-visualizer/src/sortingComponent.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./sortingComponent.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SortingComponent() {\n  _s();\n\n  let [arrayToSort, setArrayToSort] = useState([3, 2, 1]);\n  let [count, setCount] = useState(1);\n\n  const updateSortingArea = () => {\n    let array = document.getElementById(\"arrayInput\").value.split(\",\");\n    array = array.map(arrayElement => parseInt(arrayElement));\n    setArrayToSort(array);\n  };\n\n  useEffect(() => {\n    console.log(arrayToSort);\n  });\n\n  const bubbleSort = () => {\n    setArrayToSort([1, 2, 3]);\n    const n = arrayToSort.length;\n    const array = arrayToSort;\n\n    for (let i = 0; i <= n - 1; i++) {\n      for (let j = 0; j <= n - i - 1; j++) {\n        if (array[j] > array[j + 1]) {\n          const temp = array[j];\n          array[j] = array[j + 1];\n          array[j + 1] = temp;\n        }\n      }\n    }\n\n    setArrayToSort(array);\n    setCount(count++);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"arrayInput\",\n      type: \"text\",\n      onChange: updateSortingArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numberBoxArea\",\n      children: arrayToSort.map((arrayElement, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [\" \", arrayElement, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 54\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: bubbleSort,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SortingComponent, \"uK37Z0SOWkT19bQFiSswjOmUj7M=\");\n\n_c = SortingComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingComponent\");","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/sorting-visualizer/src/sortingComponent.js"],"names":["useEffect","useState","SortingComponent","arrayToSort","setArrayToSort","count","setCount","updateSortingArea","array","document","getElementById","value","split","map","arrayElement","parseInt","console","log","bubbleSort","n","length","i","j","temp","index"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,wBAAP;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACvC,MAAI,CAACC,WAAD,EAAaC,cAAb,IAA+BH,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAD,CAA3C;AACA,MAAI,CAACI,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,CAAD,CAA/B;;AAEA,QAAMM,iBAAiB,GAAG,MAAM;AAC5B,QAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CC,KAA5C,CAAkD,GAAlD,CAAZ;AACAJ,IAAAA,KAAK,GAAGA,KAAK,CAACK,GAAN,CAAUC,YAAY,IAAIC,QAAQ,CAACD,YAAD,CAAlC,CAAR;AACAV,IAAAA,cAAc,CAACI,KAAD,CAAd;AACH,GAJD;;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;AACH,GAFQ,CAAT;;AAIA,QAAMe,UAAU,GAAG,MAAM;AACrBd,IAAAA,cAAc,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAD,CAAd;AACA,UAAMe,CAAC,GAAGhB,WAAW,CAACiB,MAAtB;AACA,UAAMZ,KAAK,GAAGL,WAAd;;AACA,SAAI,IAAIkB,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIF,CAAC,GAAG,CAAxB,EAA4BE,CAAC,EAA7B,EAAiC;AAC7B,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,IAAIH,CAAC,GAACE,CAAF,GAAI,CAAzB,EAA6BC,CAAC,EAA9B,EAAkC;AAC9B,YAAGd,KAAK,CAACc,CAAD,CAAL,GAAWd,KAAK,CAACc,CAAC,GAAC,CAAH,CAAnB,EAA0B;AACtB,gBAAMC,IAAI,GAAGf,KAAK,CAACc,CAAD,CAAlB;AACAd,UAAAA,KAAK,CAACc,CAAD,CAAL,GAAWd,KAAK,CAACc,CAAC,GAAC,CAAH,CAAhB;AACAd,UAAAA,KAAK,CAACc,CAAC,GAAC,CAAH,CAAL,GAAaC,IAAb;AACH;AACJ;AACJ;;AACDnB,IAAAA,cAAc,CAACI,KAAD,CAAd;AACAF,IAAAA,QAAQ,CAACD,KAAK,EAAN,CAAR;AACJ,GAfA;;AAiBA,sBACI;AAAA,4BACA;AAAO,MAAA,EAAE,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC,MAA5B;AAAmC,MAAA,QAAQ,EAAEE;AAA7C;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACKJ,WAAW,CAACU,GAAZ,CAAgB,CAACC,YAAD,EAAcU,KAAd,kBAAwB;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,wBAAmCV,YAAnC;AAAA,SAA0BU,KAA1B;AAAA;AAAA;AAAA;AAAA,cAAxC;AADL;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA;AAAQ,MAAA,OAAO,EAAEN,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAxCuBhB,gB;;KAAAA,gB","sourcesContent":["import { useEffect, useState } from \"react\"\nimport \"./sortingComponent.css\";\n\nexport default function SortingComponent() {\n    let [arrayToSort,setArrayToSort] = useState([3,2,1]);\n    let [count,setCount] = useState(1);\n\n    const updateSortingArea = () => {\n        let array = document.getElementById(\"arrayInput\").value.split(\",\");\n        array = array.map(arrayElement => parseInt(arrayElement));\n        setArrayToSort(array);\n    }\n    \n    useEffect(() => {\n        console.log(arrayToSort);\n    });\n\n    const bubbleSort = () => {\n        setArrayToSort([1,2,3]);\n        const n = arrayToSort.length;\n        const array = arrayToSort;\n        for(let i = 0; i <= n - 1 ; i++) {\n            for(let j = 0 ; j <= n-i-1 ; j++) {\n                if(array[j] > array[j+1]) {\n                    const temp = array[j];\n                    array[j] = array[j+1];\n                    array[j+1] = temp;\n                }\n            }\n        }\n        setArrayToSort(array);\n        setCount(count++);\n   }\n\n    return (\n        <div>\n        <input id=\"arrayInput\" type=\"text\" onChange={updateSortingArea} />\n        <div className=\"numberBoxArea\"> \n            {arrayToSort.map((arrayElement,index) => <div className=\"box\" key={index}> {arrayElement} </div>)}\n        </div>\n        <button onClick={bubbleSort}>Start</button>\n       </div>\n    )       \n}"]},"metadata":{},"sourceType":"module"}