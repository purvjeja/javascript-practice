{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/main.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./commonStyle.css\";\nimport swap from \"./swap\";\nimport TimeSpeed from \"./timeSpeed\";\nimport { liveAlgorithmData } from \"./common/commonData\";\nimport { colorIndexesSettings } from \"./common/commonData\";\nimport NavigationComponent from \"./navigationComponent\";\nimport AlgorithmBox from \"./common/algorithmSortingBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SortingComponent() {\n  _s();\n\n  let [arrayToSort, setArrayToSort] = useState([4, 3, 2, 1, 0, -1, -2, -3, -4]);\n  let [ithIndex, setIthIndex] = useState(0);\n  let [jthIndex, setJthIndex] = useState(0);\n\n  const updateSortingArea = () => {\n    let array = document.getElementById(\"arrayInput\").value.split(\",\");\n    array = array.map(arrayElement => parseInt(arrayElement));\n    setArrayToSort(array);\n  };\n\n  useEffect(() => {\n    const finalIndexes = [];\n\n    for (let i = arrayToSort.length - 1; i > arrayToSort.length - ithIndex - 1; i--) finalIndexes.push(i);\n\n    const comparedBoxesPosition = ithIndex === arrayToSort.length - 2 ? [] : [jthIndex, jthIndex + 1];\n    colorIndexesSettings.compareColorIndex = comparedBoxesPosition;\n    colorIndexesSettings.swapColorIndex = comparedBoxesPosition;\n    colorIndexesSettings.sortedColorIndex = finalIndexes;\n  }, [ithIndex, jthIndex, arrayToSort]);\n\n  const generateRandomNumber = () => {\n    liveAlgorithmData.sortedStatus = false;\n    let randomNumberArray = [];\n\n    for (let i = 0; i < 10; i++) {\n      randomNumberArray.push(parseInt(Math.random() * 100));\n    }\n\n    document.getElementById(\"arrayInput\").value = randomNumberArray.toString();\n    setArrayToSort(randomNumberArray);\n  };\n\n  const bubbleSort = () => {\n    let timeOut = 1000;\n    const n = arrayToSort.length;\n    const array = arrayToSort;\n\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < n - i - 1; j++) {\n        setTimeout(() => {\n          setIthIndex(i);\n          setJthIndex(j);\n          console.log(typeof parseInt(liveAlgorithmData.speedTimeCount));\n          if (array[j] > array[j + 1]) swap(array, j, j + 1);\n          setArrayToSort([...array]);\n          if (i === n - 2 && j === n - i - 2) liveAlgorithmData.sortedStatus = true;\n        }, timeOut += parseInt(liveAlgorithmData.speedTimeCount));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavigationComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputControllerComponent\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateRandomNumber,\n        children: \"Random Numbers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"arrayInput\",\n        type: \"text\",\n        onChange: updateSortingArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: bubbleSort,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TimeSpeed, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"areaOfAlgorithmsVisualization\",\n      children: /*#__PURE__*/_jsxDEV(AlgorithmBox, {\n        array: arrayToSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SortingComponent, \"TW1JP/G3uqmB6EYmV64VMQaZFMo=\");\n\n_c = SortingComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingComponent\");","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/main.js"],"names":["useEffect","useState","swap","TimeSpeed","liveAlgorithmData","colorIndexesSettings","NavigationComponent","AlgorithmBox","SortingComponent","arrayToSort","setArrayToSort","ithIndex","setIthIndex","jthIndex","setJthIndex","updateSortingArea","array","document","getElementById","value","split","map","arrayElement","parseInt","finalIndexes","i","length","push","comparedBoxesPosition","compareColorIndex","swapColorIndex","sortedColorIndex","generateRandomNumber","sortedStatus","randomNumberArray","Math","random","toString","bubbleSort","timeOut","n","j","setTimeout","console","log","speedTimeCount"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport \"./commonStyle.css\";\nimport swap from \"./swap\";\nimport TimeSpeed from \"./timeSpeed\";\nimport { liveAlgorithmData } from \"./common/commonData\";\nimport { colorIndexesSettings } from \"./common/commonData\";\nimport NavigationComponent from \"./navigationComponent\";\nimport AlgorithmBox from \"./common/algorithmSortingBox\";\n\nexport default function SortingComponent() {\n    let [arrayToSort,setArrayToSort] = useState([4,3,2,1,0,-1,-2,-3,-4]);\n    let [ithIndex,setIthIndex] = useState(0);\n    let [jthIndex,setJthIndex] = useState(0);\n\n\n\n    const updateSortingArea = () => {\n        let array = document.getElementById(\"arrayInput\").value.split(\",\");\n        array = array.map(arrayElement => parseInt(arrayElement));\n        setArrayToSort(array);\n    }   \n\n    useEffect(() => {\n        const finalIndexes = [];\n        for(let i = arrayToSort.length - 1 ; i > arrayToSort.length - ithIndex - 1 ; i-- ) finalIndexes.push(i);\n        const comparedBoxesPosition = (ithIndex === arrayToSort.length-2) ? [] : [jthIndex,jthIndex+1];\n\n        colorIndexesSettings.compareColorIndex = comparedBoxesPosition;\n        colorIndexesSettings.swapColorIndex = comparedBoxesPosition;\n        colorIndexesSettings.sortedColorIndex = finalIndexes;\n        \n    },[ithIndex,jthIndex,arrayToSort]);\n\n\n    const generateRandomNumber = () => {\n        liveAlgorithmData.sortedStatus = false;\n        let randomNumberArray = [];\n        for(let i = 0 ; i < 10 ; i++) {\n            randomNumberArray.push(parseInt(Math.random() * 100));\n        }\n        document.getElementById(\"arrayInput\").value = randomNumberArray.toString(); \n        setArrayToSort(randomNumberArray);\n    }\n\n    const bubbleSort = () => {\n        let timeOut = 1000;\n        const n = arrayToSort.length;\n        const array = arrayToSort;\n        for(let i = 0; i < n ; i++) {\n            for(let j = 0 ; j < n-i-1  ; j++) {\n                setTimeout(() => {\n                    setIthIndex(i);\n                    setJthIndex(j);\n                    console.log(typeof(parseInt(liveAlgorithmData.speedTimeCount)));\n                    if(array[j] > array[j+1]) swap(array,j,j+1);\n                    setArrayToSort([...array]);\n                    if(i === n - 2 && j === n - i - 2) liveAlgorithmData.sortedStatus = true;\n                },  timeOut += parseInt(liveAlgorithmData.speedTimeCount));\n            }    \n        }\n    }   \n\n    return (\n        <div>\n            \n            <NavigationComponent />\n            <div className=\"inputControllerComponent\" >\n            <button onClick={generateRandomNumber}>Random Numbers</button>    \n            <input id=\"arrayInput\" type=\"text\" onChange={updateSortingArea}/>\n            <button onClick={bubbleSort}>Start</button>\n            <TimeSpeed />\n             </div>\n            \n            <div className=\"areaOfAlgorithmsVisualization\">\n                <AlgorithmBox array={arrayToSort} />\n            </div>\n       </div>\n    )       \n}"]},"metadata":{},"sourceType":"module"}