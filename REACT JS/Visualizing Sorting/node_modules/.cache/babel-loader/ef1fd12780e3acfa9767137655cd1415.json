{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/components/navigationComponent.js\";\nimport \"../commonStyle.css\";\nimport { listOfAlgorithms } from \"../common/commonData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavigationBar() {\n  console.log(listOfAlgorithms);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        \"padding-left\": \"20px\"\n      },\n      children: \" Sorting Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigationOptions\",\n      children: listOfAlgorithms.map((algorithm, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        style: setSelectionColor(algorithm.selectionStatus),\n        onClick: () => setSelectionStatus(algorithm.id),\n        className: \"algoOptionButton\",\n        id: algorithm.id,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: algorithm.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 218\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 61\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = NavigationBar;\n\nconst setSelectionColor = selectedAlgorithmStatus => {\n  return {\n    backgroundColor: selectedAlgorithmStatus ? \"white\" : \"cyan\"\n  };\n};\n\nconst setSelectionStatus = selectedId => {\n  listOfAlgorithms.selectedId.selectionStatus = true;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/components/navigationComponent.js"],"names":["listOfAlgorithms","NavigationBar","console","log","map","algorithm","index","setSelectionColor","selectionStatus","setSelectionStatus","id","name","selectedAlgorithmStatus","backgroundColor","selectedId"],"mappings":";AAAA,OAAO,oBAAP;AACA,SAASA,gBAAT,QAAiC,sBAAjC;;AACA,eAAe,SAASC,aAAT,GAAyB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,gBAAZ;AACA,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAAC,wBAAiB;AAAlB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACMA,gBAAgB,CAACI,GAAjB,CAAqB,CAACC,SAAD,EAAWC,KAAX,kBAAqB;AAAQ,QAAA,KAAK,EAAEC,iBAAiB,CAACF,SAAS,CAACG,eAAX,CAAhC;AAA6D,QAAA,OAAO,EAAE,MAAMC,kBAAkB,CAACJ,SAAS,CAACK,EAAX,CAA9F;AAA8G,QAAA,SAAS,EAAC,kBAAxH;AAA2I,QAAA,EAAE,EAAEL,SAAS,CAACK,EAAzJ;AAAA,+BAA6J;AAAA,oBAAKL,SAAS,CAACM;AAAf;AAAA;AAAA;AAAA;AAAA;AAA7J;AAAA;AAAA;AAAA;AAAA,cAA1C;AADN;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;KAVuBV,a;;AAYxB,MAAMM,iBAAiB,GAAIK,uBAAD,IAA6B;AACnD,SAAO;AACHC,IAAAA,eAAe,EAAKD,uBAAD,GAA4B,OAA5B,GAAsC;AADtD,GAAP;AAGH,CAJD;;AAMA,MAAMH,kBAAkB,GAAIK,UAAD,IAAgB;AACvCd,EAAAA,gBAAgB,CAACc,UAAjB,CAA4BN,eAA5B,GAA8C,IAA9C;AACH,CAFD","sourcesContent":["import \"../commonStyle.css\";\nimport { listOfAlgorithms } from \"../common/commonData\";\nexport default function NavigationBar() {\n    console.log(listOfAlgorithms);\n    return (\n        <div> \n            <h1 style={{\"padding-left\" : \"20px\"}}> Sorting Visualizer</h1>\n            <div className=\"navigationOptions\">\n                 {listOfAlgorithms.map((algorithm,index) => <button style={setSelectionColor(algorithm.selectionStatus)} onClick={() => setSelectionStatus(algorithm.id)} className=\"algoOptionButton\" id={algorithm.id}><h3>{algorithm.name}</h3></button> )}\n            </div>\n        </div>\n    );\n}\n\nconst setSelectionColor = (selectedAlgorithmStatus) => {\n    return {\n        backgroundColor  : (selectedAlgorithmStatus) ? \"white\" : \"cyan\"\n    }\n}\n\nconst setSelectionStatus = (selectedId) => {\n    listOfAlgorithms.selectedId.selectionStatus = true;\n}"]},"metadata":{},"sourceType":"module"}