{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/components/navigationComponent.js\",\n    _s = $RefreshSig$();\n\nimport \"../commonStyle.css\";\nimport { listOfAlgorithms } from \"../common/commonData\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavigationBar() {\n  _s();\n\n  let [currentActive, setCurrentActive] = useState(0);\n\n  const setSelectionColor = id => {\n    console.log(id);\n    return {\n      backgroundColor: id === currentActive ? \"white\" : \"cyan\"\n    };\n  };\n\n  const setSelectionStatus = selectedId => {\n    selectedId.selectionStatus = true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        \"padding-left\": \"20px\"\n      },\n      children: \" Sorting Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigationOptions\",\n      children: listOfAlgorithms.map((algorithm, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        style: setSelectionColor(algorithm.id),\n        onClick: () => setSelectionStatus(algorithm.id),\n        className: \"algoOptionButton\",\n        id: algorithm.id,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: algorithm.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 205\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 61\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NavigationBar, \"HXujjC0p+MeCGfHs8c6WMiPf/Ow=\");\n\n_c = NavigationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/components/navigationComponent.js"],"names":["listOfAlgorithms","useState","NavigationBar","currentActive","setCurrentActive","setSelectionColor","id","console","log","backgroundColor","setSelectionStatus","selectedId","selectionStatus","map","algorithm","index","name"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,SAASA,gBAAT,QAAiC,sBAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,MAAI,CAACC,aAAD,EAAeC,gBAAf,IAAmCH,QAAQ,CAAC,CAAD,CAA/C;;AAEA,QAAMI,iBAAiB,GAAIC,EAAD,IAAQ;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,WAAO;AACHG,MAAAA,eAAe,EAAKH,EAAE,KAAKH,aAAR,GAAyB,OAAzB,GAAmC;AADnD,KAAP;AAGH,GALD;;AAOA,QAAMO,kBAAkB,GAAIC,UAAD,IAAgB;AACvCA,IAAAA,UAAU,CAACC,eAAX,GAA6B,IAA7B;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAAC,wBAAiB;AAAlB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACMZ,gBAAgB,CAACa,GAAjB,CAAqB,CAACC,SAAD,EAAWC,KAAX,kBAAqB;AAAQ,QAAA,KAAK,EAAEV,iBAAiB,CAACS,SAAS,CAACR,EAAX,CAAhC;AAAgD,QAAA,OAAO,EAAE,MAAMI,kBAAkB,CAACI,SAAS,CAACR,EAAX,CAAjF;AAAiG,QAAA,SAAS,EAAC,kBAA3G;AAA8H,QAAA,EAAE,EAAEQ,SAAS,CAACR,EAA5I;AAAA,+BAAgJ;AAAA,oBAAKQ,SAAS,CAACE;AAAf;AAAA;AAAA;AAAA;AAAA;AAAhJ;AAAA;AAAA;AAAA;AAAA,cAA1C;AADN;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAtBuBd,a;;KAAAA,a","sourcesContent":["import \"../commonStyle.css\";\nimport { listOfAlgorithms } from \"../common/commonData\";\nimport { useState } from \"react\";\nexport default function NavigationBar() {\n    let [currentActive,setCurrentActive] = useState(0);\n \n    const setSelectionColor = (id) => {\n        console.log(id);\n        return {\n            backgroundColor  : (id === currentActive) ? \"white\" : \"cyan\"\n        }\n    }\n    \n    const setSelectionStatus = (selectedId) => {\n        selectedId.selectionStatus = true;\n    }\n \n    return (\n        <div> \n            <h1 style={{\"padding-left\" : \"20px\"}}> Sorting Visualizer</h1>\n            <div className=\"navigationOptions\">\n                 {listOfAlgorithms.map((algorithm,index) => <button style={setSelectionColor(algorithm.id)} onClick={() => setSelectionStatus(algorithm.id)} className=\"algoOptionButton\" id={algorithm.id}><h3>{algorithm.name}</h3></button> )}\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}