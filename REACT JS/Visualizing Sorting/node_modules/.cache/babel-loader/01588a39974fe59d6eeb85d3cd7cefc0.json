{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/sortingComponent.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport \"./sortingComponent.css\";\nimport swap from \"./swap\";\nimport TimeSpeed from \"./timeSpeed\";\nimport { data } from \"./liveData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SortingComponent() {\n  _s();\n\n  let [arrayToSort, setArrayToSort] = useState([4, 3, 2, 1, 0, -1, -2, -3, -4]);\n  let [sortedStatus, setSortedStatus] = useState(false);\n  let [operationIndex, setOperationIndex] = useState({\n    compareColorIndex: [],\n    swapColorIndex: [],\n    sortedColorIndex: []\n  });\n  let [ithIndex, setIthIndex] = useState(0);\n  let [jthIndex, setJthIndex] = useState(0);\n  let [timeCounter, setTimeCounter] = useState(data.speedTimeCount);\n  const nameOfAlgorithms = [{\n    name: 'bubbleSort'\n  }, {\n    name: 'selectionSort'\n  }, {\n    name: 'insertionSort'\n  }, {\n    name: 'heapSort'\n  }, {\n    name: 'mergeSort'\n  }, {\n    name: 'quickSort'\n  }];\n\n  const updateSortingArea = () => {\n    let array = document.getElementById(\"arrayInput\").value.split(\",\");\n    array = array.map(arrayElement => parseInt(arrayElement));\n    setArrayToSort(array);\n  };\n\n  useEffect(() => {\n    const finalIndexes = [];\n\n    for (let i = arrayToSort.length - 1; i > arrayToSort.length - ithIndex - 1; i--) finalIndexes.push(i);\n\n    const comparedBoxesPosition = ithIndex === arrayToSort.length - 2 ? [] : [jthIndex, jthIndex + 1];\n    setOperationIndex({\n      compareColorIndex: comparedBoxesPosition,\n      swapColorIndex: comparedBoxesPosition,\n      sortedColorIndex: finalIndexes\n    });\n  }, [ithIndex, jthIndex, arrayToSort]);\n\n  const generateRandomNumber = () => {\n    setSortedStatus(false);\n    let randomNumberArray = [];\n\n    for (let i = 0; i < 10; i++) {\n      randomNumberArray.push(parseInt(Math.random() * 100));\n    }\n\n    document.getElementById(\"arrayInput\").value = randomNumberArray.toString();\n    setOperationIndex({\n      compareColorIndex: [],\n      swapColorIndex: [],\n      sortedColorIndex: []\n    });\n    setArrayToSort(randomNumberArray);\n  };\n\n  const setColor = index => {\n    return {\n      backgroundColor: operationIndex.compareColorIndex.includes(index) ? 'pink' : operationIndex.swapColorIndex.includes(index) ? 'yellow' : operationIndex.sortedColorIndex.includes(index) || sortedStatus ? 'green' : 'grey'\n    };\n  };\n\n  const bubbleSort = () => {\n    let timeOut = 500;\n    const n = arrayToSort.length;\n    const array = arrayToSort;\n\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < n - i - 1; j++) {\n        // eslint-disable-next-line no-loop-func\n        setTimeout(() => {\n          setIthIndex(i);\n          setJthIndex(j);\n          setTimeCounter(data.speedTimeCount);\n          console.log(data.speedTimeCount);\n          if (array[j] > array[j + 1]) swap(array, j, j + 1);\n          setArrayToSort([...array]);\n          if (i === n - 2 && j === n - i - 2) setSortedStatus(true);\n        }, timeOut += timeCounter);\n      }\n    }\n  };\n\n  const NumberBox = props => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      id: props.index,\n      style: setColor(props.index),\n      children: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  };\n\n  function a11yProps(index) {\n    return {\n      id: `scrollable-auto-tab-${index}`,\n      \"aria-controls\": `scrollable-auto-tabpanel-${index}`\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"arrayInput\",\n        type: \"text\",\n        onChange: updateSortingArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateRandomNumber,\n        children: \"Random Numbers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: bubbleSort,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimeSpeed, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabs //  value={algorithm}\n    //  onChange={(event, id) => setAlgorithm(id)}\n    , {\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"scrollable\",\n      scrollButtons: \"auto\",\n      \"aria-label\": \"scrollable auto tabs example\",\n      children: [nameOfAlgorithms.map(algo => /*#__PURE__*/_jsxDEV(Tab, {\n        label: algo.name,\n        ...a11yProps(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"All\",\n        ...a11yProps(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"areaOfAlgorithmsVisualization\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sortingBlockBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sortingInformationOne\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sortingHeader\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"Bubble Sort Algorithm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sortingTime\",\n            children: \"Time : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"numberBox\",\n          children: arrayToSort.map((arrayElement, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"  \", /*#__PURE__*/_jsxDEV(NumberBox, {\n              index: index,\n              content: arrayElement\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 81\n            }, this), \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 62\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sortingInformationTwo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sortingSwaps\",\n            children: [\" Swaps : \", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sortingComparison\",\n            children: [\"Comparisions : \", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SortingComponent, \"1yOd7qKbe/0z/2p2pbeaT17HWn0=\");\n\n_c = SortingComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingComponent\");","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/sortingComponent.js"],"names":["useEffect","useState","Tabs","Tab","swap","TimeSpeed","data","SortingComponent","arrayToSort","setArrayToSort","sortedStatus","setSortedStatus","operationIndex","setOperationIndex","compareColorIndex","swapColorIndex","sortedColorIndex","ithIndex","setIthIndex","jthIndex","setJthIndex","timeCounter","setTimeCounter","speedTimeCount","nameOfAlgorithms","name","updateSortingArea","array","document","getElementById","value","split","map","arrayElement","parseInt","finalIndexes","i","length","push","comparedBoxesPosition","generateRandomNumber","randomNumberArray","Math","random","toString","setColor","index","backgroundColor","includes","bubbleSort","timeOut","n","j","setTimeout","console","log","NumberBox","props","content","a11yProps","id","algo"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAO,wBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,YAArB;;AACA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACvC,MAAI,CAACC,WAAD,EAAaC,cAAb,IAA+BR,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAC,CAAZ,EAAc,CAAC,CAAf,EAAiB,CAAC,CAAlB,EAAoB,CAAC,CAArB,CAAD,CAA3C;AACA,MAAI,CAACS,YAAD,EAAcC,eAAd,IAAiCV,QAAQ,CAAC,KAAD,CAA7C;AACA,MAAI,CAACW,cAAD,EAAgBC,iBAAhB,IAAqCZ,QAAQ,CAAC;AAC9Ca,IAAAA,iBAAiB,EAAG,EAD0B;AAE9CC,IAAAA,cAAc,EAAG,EAF6B;AAG9CC,IAAAA,gBAAgB,EAAG;AAH2B,GAAD,CAAjD;AAKA,MAAI,CAACC,QAAD,EAAUC,WAAV,IAAyBjB,QAAQ,CAAC,CAAD,CAArC;AACA,MAAI,CAACkB,QAAD,EAAUC,WAAV,IAAyBnB,QAAQ,CAAC,CAAD,CAArC;AACA,MAAI,CAACoB,WAAD,EAAaC,cAAb,IAA+BrB,QAAQ,CAACK,IAAI,CAACiB,cAAN,CAA3C;AAEA,QAAMC,gBAAgB,GAAG,CACrB;AAACC,IAAAA,IAAI,EAAG;AAAR,GADqB,EAErB;AAACA,IAAAA,IAAI,EAAG;AAAR,GAFqB,EAGrB;AAACA,IAAAA,IAAI,EAAG;AAAR,GAHqB,EAIrB;AAACA,IAAAA,IAAI,EAAG;AAAR,GAJqB,EAKrB;AAACA,IAAAA,IAAI,EAAG;AAAR,GALqB,EAMrB;AAACA,IAAAA,IAAI,EAAG;AAAR,GANqB,CAAzB;;AASA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CC,KAA5C,CAAkD,GAAlD,CAAZ;AACAJ,IAAAA,KAAK,GAAGA,KAAK,CAACK,GAAN,CAAUC,YAAY,IAAIC,QAAQ,CAACD,YAAD,CAAlC,CAAR;AACAxB,IAAAA,cAAc,CAACkB,KAAD,CAAd;AACH,GAJD;;AAMA3B,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmC,YAAY,GAAG,EAArB;;AACA,SAAI,IAAIC,CAAC,GAAG5B,WAAW,CAAC6B,MAAZ,GAAqB,CAAjC,EAAqCD,CAAC,GAAG5B,WAAW,CAAC6B,MAAZ,GAAqBpB,QAArB,GAAgC,CAAzE,EAA6EmB,CAAC,EAA9E,EAAmFD,YAAY,CAACG,IAAb,CAAkBF,CAAlB;;AACnF,UAAMG,qBAAqB,GAAItB,QAAQ,KAAKT,WAAW,CAAC6B,MAAZ,GAAmB,CAAjC,GAAsC,EAAtC,GAA2C,CAAClB,QAAD,EAAUA,QAAQ,GAAC,CAAnB,CAAzE;AAEAN,IAAAA,iBAAiB,CAAC;AACdC,MAAAA,iBAAiB,EAAGyB,qBADN;AAEdxB,MAAAA,cAAc,EAAGwB,qBAFH;AAGdvB,MAAAA,gBAAgB,EAAGmB;AAHL,KAAD,CAAjB;AAKH,GAVQ,EAUP,CAAClB,QAAD,EAAUE,QAAV,EAAmBX,WAAnB,CAVO,CAAT;;AAYA,QAAMgC,oBAAoB,GAAG,MAAM;AAC/B7B,IAAAA,eAAe,CAAC,KAAD,CAAf;AACA,QAAI8B,iBAAiB,GAAG,EAAxB;;AACA,SAAI,IAAIL,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAG,EAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BK,MAAAA,iBAAiB,CAACH,IAAlB,CAAuBJ,QAAQ,CAACQ,IAAI,CAACC,MAAL,KAAgB,GAAjB,CAA/B;AACH;;AACDf,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,GAA8CW,iBAAiB,CAACG,QAAlB,EAA9C;AACA/B,IAAAA,iBAAiB,CAAC;AACdC,MAAAA,iBAAiB,EAAG,EADN;AAEdC,MAAAA,cAAc,EAAG,EAFH;AAGdC,MAAAA,gBAAgB,EAAG;AAHL,KAAD,CAAjB;AAKAP,IAAAA,cAAc,CAACgC,iBAAD,CAAd;AACH,GAbD;;AAgBA,QAAMI,QAAQ,GAAIC,KAAD,IAAW;AACxB,WAAO;AAACC,MAAAA,eAAe,EAAInC,cAAc,CAACE,iBAAf,CAAiCkC,QAAjC,CAA0CF,KAA1C,IAAkD,MAAlD,GACAlC,cAAc,CAACG,cAAf,CAA8BiC,QAA9B,CAAuCF,KAAvC,CAAD,GAAkD,QAAlD,GACClC,cAAc,CAACI,gBAAf,CAAgCgC,QAAhC,CAAyCF,KAAzC,KAAmDpC,YAApD,GAAqE,OAArE,GAA+E;AAFlG,KAAP;AAGH,GAJD;;AAMA,QAAMuC,UAAU,GAAG,MAAM;AACrB,QAAIC,OAAO,GAAG,GAAd;AACA,UAAMC,CAAC,GAAG3C,WAAW,CAAC6B,MAAtB;AACA,UAAMV,KAAK,GAAGnB,WAAd;;AACA,SAAI,IAAI4B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGe,CAAnB,EAAuBf,CAAC,EAAxB,EAA4B;AACxB,WAAI,IAAIgB,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGD,CAAC,GAACf,CAAF,GAAI,CAAxB,EAA6BgB,CAAC,EAA9B,EAAkC;AAC9B;AACAC,QAAAA,UAAU,CAAC,MAAM;AACbnC,UAAAA,WAAW,CAACkB,CAAD,CAAX;AACAhB,UAAAA,WAAW,CAACgC,CAAD,CAAX;AACA9B,UAAAA,cAAc,CAAChB,IAAI,CAACiB,cAAN,CAAd;AACA+B,UAAAA,OAAO,CAACC,GAAR,CAAajD,IAAI,CAACiB,cAAlB;AACA,cAAGI,KAAK,CAACyB,CAAD,CAAL,GAAWzB,KAAK,CAACyB,CAAC,GAAC,CAAH,CAAnB,EAA0BhD,IAAI,CAACuB,KAAD,EAAOyB,CAAP,EAASA,CAAC,GAAC,CAAX,CAAJ;AAC1B3C,UAAAA,cAAc,CAAC,CAAC,GAAGkB,KAAJ,CAAD,CAAd;AACA,cAAGS,CAAC,KAAKe,CAAC,GAAG,CAAV,IAAeC,CAAC,KAAKD,CAAC,GAAGf,CAAJ,GAAQ,CAAhC,EAAmCzB,eAAe,CAAC,IAAD,CAAf;AACtC,SARS,EAQNuC,OAAO,IAAI7B,WARL,CAAV;AASH;AACJ;AACJ,GAlBD;;AAoBA,QAAMmC,SAAS,GAAIC,KAAD,IAAW;AACzB,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAEA,KAAK,CAACX,KAA/B;AAAsC,MAAA,KAAK,EAAED,QAAQ,CAACY,KAAK,CAACX,KAAP,CAArD;AAAA,gBACKW,KAAK,CAACC;AADX;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND;;AAQA,WAASC,SAAT,CAAmBb,KAAnB,EAA0B;AACtB,WAAO;AACLc,MAAAA,EAAE,EAAG,uBAAsBd,KAAM,EAD5B;AAEL,uBAAkB,4BAA2BA,KAAM;AAF9C,KAAP;AAID;;AAEH,sBACI;AAAA,4BAEI;AAAA,8BACI;AAAO,QAAA,EAAE,EAAC,YAAV;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,QAAQ,EAAEpB;AAA7C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEc,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAES,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,IAAD,CACA;AACA;AAFA;AAGC,MAAA,cAAc,EAAC,SAHhB;AAIC,MAAA,SAAS,EAAC,SAJX;AAKC,MAAA,OAAO,EAAC,YALT;AAMC,MAAA,aAAa,EAAC,MANf;AAOC,oBAAW,8BAPZ;AAAA,iBASCzB,gBAAgB,CAACQ,GAAjB,CAAsB6B,IAAD,iBAClB,QAAC,GAAD;AACI,QAAA,KAAK,EAAIA,IAAI,CAACpC,IADlB;AAAA,WAEQkC,SAAS,CAAC,CAAD;AAFjB;AAAA;AAAA;AAAA;AAAA,cADH,CATD,eAeA,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA,WAAqBA,SAAS,CAAC,CAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,cAfA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAyBI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCAA+B;AAAA,qCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBACKnD,WAAW,CAACwB,GAAZ,CAAgB,CAACC,YAAD,EAAca,KAAd,kBAAwB;AAAA,0CAAmB,QAAC,SAAD;AAAW,cAAA,KAAK,EAAEA,KAAlB;AAAyB,cAAA,OAAO,EAAEb;AAAlC;AAAA;AAAA;AAAA;AAAA,oBAAnB;AAAA,aAAUa,KAAV;AAAA;AAAA;AAAA;AAAA,kBAAxC;AADL;AAAA;AAAA;AAAA;AAAA,gBALA,eAQA;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4CH;;GA5IuBvC,gB;;KAAAA,gB","sourcesContent":["import { useEffect, useState } from \"react\"\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport \"./sortingComponent.css\";\nimport swap from \"./swap\";\nimport TimeSpeed from \"./timeSpeed\";\nimport { data } from \"./liveData\";\nexport default function SortingComponent() {\n    let [arrayToSort,setArrayToSort] = useState([4,3,2,1,0,-1,-2,-3,-4]);\n    let [sortedStatus,setSortedStatus] = useState(false);\n    let [operationIndex,setOperationIndex] = useState({\n        compareColorIndex : [],\n        swapColorIndex : [],\n        sortedColorIndex : []\n    });\n    let [ithIndex,setIthIndex] = useState(0);\n    let [jthIndex,setJthIndex] = useState(0);\n    let [timeCounter,setTimeCounter] = useState(data.speedTimeCount)\n\n    const nameOfAlgorithms = [\n        {name : 'bubbleSort'},\n        {name : 'selectionSort'},\n        {name : 'insertionSort'},\n        {name : 'heapSort'},\n        {name : 'mergeSort'},\n        {name : 'quickSort'}\n    ];\n\n    const updateSortingArea = () => {\n        let array = document.getElementById(\"arrayInput\").value.split(\",\");\n        array = array.map(arrayElement => parseInt(arrayElement));\n        setArrayToSort(array);\n    }   \n\n    useEffect(() => {\n        const finalIndexes = [];\n        for(let i = arrayToSort.length - 1 ; i > arrayToSort.length - ithIndex - 1 ; i-- ) finalIndexes.push(i);\n        const comparedBoxesPosition = (ithIndex === arrayToSort.length-2) ? [] : [jthIndex,jthIndex+1];\n\n        setOperationIndex({\n            compareColorIndex : comparedBoxesPosition,\n            swapColorIndex : comparedBoxesPosition,\n            sortedColorIndex : finalIndexes,\n        })\n    },[ithIndex,jthIndex,arrayToSort]);\n\n    const generateRandomNumber = () => {\n        setSortedStatus(false);\n        let randomNumberArray = [];\n        for(let i = 0 ; i < 10 ; i++) {\n            randomNumberArray.push(parseInt(Math.random() * 100));\n        }\n        document.getElementById(\"arrayInput\").value = randomNumberArray.toString(); \n        setOperationIndex({\n            compareColorIndex : [],\n            swapColorIndex : [],\n            sortedColorIndex : [], \n        });\n        setArrayToSort(randomNumberArray);\n    }\n\n\n    const setColor = (index) => { \n        return {backgroundColor : (operationIndex.compareColorIndex.includes(index)? 'pink' : \n                                  (operationIndex.swapColorIndex.includes(index)) ? 'yellow' : \n                                  (operationIndex.sortedColorIndex.includes(index) || sortedStatus ) ? 'green' : 'grey') }; \n    }\n\n    const bubbleSort = () => {\n        let timeOut = 500;\n        const n = arrayToSort.length;\n        const array = arrayToSort;\n        for(let i = 0; i < n ; i++) {\n            for(let j = 0 ; j < n-i-1  ; j++) {\n                // eslint-disable-next-line no-loop-func\n                setTimeout(() => {\n                    setIthIndex(i);\n                    setJthIndex(j);\n                    setTimeCounter(data.speedTimeCount);\n                    console.log( data.speedTimeCount);\n                    if(array[j] > array[j+1]) swap(array,j,j+1);          \n                    setArrayToSort([...array]);\n                    if(i === n - 2 && j === n - i - 2) setSortedStatus(true);\n                },  timeOut += timeCounter);\n            }    \n        }\n    }   \n\n    const NumberBox = (props) => {\n        return (\n            <div className=\"box\" id={props.index} style={setColor(props.index)}>\n                {props.content}\n            </div>\n        )\n    }  \n\n    function a11yProps(index) {\n        return {\n          id: `scrollable-auto-tab-${index}`,\n          \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n        };\n      }\n\n    return (\n        <div>\n            \n            <div>\n                <input id=\"arrayInput\" type=\"text\" onChange={updateSortingArea} /> \n                <button onClick={generateRandomNumber}>Random Numbers</button>\n                <button onClick={bubbleSort}>Start</button>\n            </div>\n            <TimeSpeed />\n            <Tabs\n            //  value={algorithm}\n            //  onChange={(event, id) => setAlgorithm(id)}\n             indicatorColor=\"primary\"\n             textColor=\"primary\"\n             variant=\"scrollable\"\n             scrollButtons=\"auto\"\n             aria-label=\"scrollable auto tabs example\"\n            >\n            {nameOfAlgorithms.map((algo) =>  (\n                <Tab \n                    label = {algo.name}\n                    {...a11yProps(0)}\n                />\n            ))}\n            <Tab label=\"All\" {...a11yProps(6)} />\n            </Tabs>\n            <div className=\"areaOfAlgorithmsVisualization\">\n                \n                <div className=\"sortingBlockBox\">\n                    <div className=\"sortingInformationOne\">\n                        <div className=\"sortingHeader\"><b><u>Bubble Sort Algorithm</u></b></div>\n                        <div className=\"sortingTime\">Time : {}</div>\n                    </div>\n                <div className=\"numberBox\"> \n                    {arrayToSort.map((arrayElement,index) => <div key={index}>  <NumberBox index={index} content={arrayElement}  /> </div>)}\n                </div>\n                <div className=\"sortingInformationTwo\">\n                    <div className=\"sortingSwaps\"> Swaps : {} </div>\n                    <div className=\"sortingComparison\">Comparisions : {} </div>\n                </div>  \n            </div>\n            </div>\n       </div>\n    )       \n}"]},"metadata":{},"sourceType":"module"}