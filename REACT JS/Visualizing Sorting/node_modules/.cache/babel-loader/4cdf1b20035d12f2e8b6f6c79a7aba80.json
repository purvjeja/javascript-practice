{"ast":null,"code":"// import swap from \"../common/swap\";\n// import { liveAlgorithmData,colorIndexesSettings,arrayToSort } from \"../common/commonData\";\n// import { useState } from \"react\";\n// export default function bubbleSort() {\n//     let [array,setArray] = useState(arrayToSort);\n//     let [ithIndex,setIthIndex] = useState(0);\n//     let [jthIndex,setJthIndex] = useState(0);\n//     const finalIndexes = [];\n//     for(let i = arrayToSort.length - 1 ; i > arrayToSort.length - ithIndex - 1 ; i-- ) finalIndexes.push(i);\n//     const comparedBoxesPosition = (ithIndex === arrayToSort.length-2) ? [] : [jthIndex,jthIndex+1];\n//     colorIndexesSettings.compareColorIndex = comparedBoxesPosition;\n//     colorIndexesSettings.swapColorIndex = comparedBoxesPosition;\n//     colorIndexesSettings.sortedColorIndex = finalIndexes;\n//     let timeOut = 1000;\n//         const n = array.length;\n//         const currentArray = array;\n//         for(let i = 0; i < n ; i++) {\n//             for(let j = 0 ; j < n-i-1  ; j++) {\n//                 // eslint-disable-next-line no-loop-func\n//                 setTimeout(() => {\n//                     setIthIndex(i);\n//                     setJthIndex(j);\n//                     if(currentArray[j] > currentArray[j+1]) swap(currentArray,j,j+1);\n//                     setArray([...currentArray]);\n//                     if(i === n - 2 && j === n - i - 2) liveAlgorithmData.sortedStatus = true;\n//                 },  timeOut += parseInt(liveAlgorithmData.speedTimeCount));\n//             }    \n//         }\n// }","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/sortingAlgorithms/bubbleSort.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import swap from \"../common/swap\";\n// import { liveAlgorithmData,colorIndexesSettings,arrayToSort } from \"../common/commonData\";\n// import { useState } from \"react\";\n// export default function bubbleSort() {\n//     let [array,setArray] = useState(arrayToSort);\n//     let [ithIndex,setIthIndex] = useState(0);\n//     let [jthIndex,setJthIndex] = useState(0);\n\n//     const finalIndexes = [];\n//     for(let i = arrayToSort.length - 1 ; i > arrayToSort.length - ithIndex - 1 ; i-- ) finalIndexes.push(i);\n//     const comparedBoxesPosition = (ithIndex === arrayToSort.length-2) ? [] : [jthIndex,jthIndex+1];\n\n//     colorIndexesSettings.compareColorIndex = comparedBoxesPosition;\n//     colorIndexesSettings.swapColorIndex = comparedBoxesPosition;\n//     colorIndexesSettings.sortedColorIndex = finalIndexes;\n        \n//     let timeOut = 1000;\n//         const n = array.length;\n//         const currentArray = array;\n//         for(let i = 0; i < n ; i++) {\n//             for(let j = 0 ; j < n-i-1  ; j++) {\n//                 // eslint-disable-next-line no-loop-func\n//                 setTimeout(() => {\n//                     setIthIndex(i);\n//                     setJthIndex(j);\n//                     if(currentArray[j] > currentArray[j+1]) swap(currentArray,j,j+1);\n//                     setArray([...currentArray]);\n//                     if(i === n - 2 && j === n - i - 2) liveAlgorithmData.sortedStatus = true;\n//                 },  timeOut += parseInt(liveAlgorithmData.speedTimeCount));\n//             }    \n//         }\n\n// }"]},"metadata":{},"sourceType":"module"}