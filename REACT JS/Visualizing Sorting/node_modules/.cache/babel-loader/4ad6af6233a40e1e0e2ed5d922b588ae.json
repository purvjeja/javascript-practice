{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/sortingComponent.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./sortingComponent.css\";\nimport swap from \"./swap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SortingComponent() {\n  _s();\n\n  let [arrayToSort, setArrayToSort] = useState([4, 3, 2, 1, 0, -1, -2, -3, -4]);\n  let [operationIndex, setOperationIndex] = useState({\n    compareColorIndex: [],\n    swapColorIndex: [],\n    sortedColorIndex: []\n  });\n  let [ithIndex, setIthIndex] = useState(0);\n  let [jthIndex, setJthIndex] = useState(0);\n\n  const updateSortingArea = () => {\n    let array = document.getElementById(\"arrayInput\").value.split(\",\");\n    array = array.map(arrayElement => parseInt(arrayElement));\n    setArrayToSort(array);\n  };\n\n  useEffect(() => {\n    const finalIndexes = [];\n\n    for (let i = arrayToSort.length - 1; i > arrayToSort.length - ithIndex - 1; i--) finalIndexes.push(i);\n\n    const comparedBoxesPosition = ithIndex === arrayToSort.length - 2 ? [] : [jthIndex, jthIndex + 1];\n    setOperationIndex({\n      compareColorIndex: comparedBoxesPosition,\n      swapColorIndex: comparedBoxesPosition,\n      sortedColorIndex: finalIndexes\n    });\n  }, [ithIndex, jthIndex, arrayToSort]);\n\n  const generateRandomNumber = () => {\n    setSortedStatus(false);\n    let randomNumberArray = [];\n\n    for (let i = 0; i < 10; i++) {\n      randomNumberArray.push(parseInt(Math.random() * 100));\n    }\n\n    document.getElementById(\"arrayInput\").value = randomNumberArray.toString();\n    setArrayToSort(randomNumberArray);\n  };\n\n  const setColor = index => {\n    return {\n      backgroundColor: operationIndex.compareColorIndex.includes(index) ? 'yellow' : operationIndex.swapColorIndex.includes(index) ? 'pink' : operationIndex.sortedColorIndex.includes(index) ? 'green' : 'grey'\n    };\n  };\n\n  const NumberBox = props => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      id: props.index,\n      style: setColor(props.index),\n      children: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  };\n\n  const bubbleSort = () => {\n    let timeOut = 500;\n    const n = arrayToSort.length;\n    const array = arrayToSort;\n\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < n - i - 1; j++) {\n        // eslint-disable-next-line no-loop-func\n        setTimeout(() => {\n          setIthIndex(i);\n          setJthIndex(j);\n          if (array[j] > array[j + 1]) swap(array, j, j + 1);\n          setArrayToSort([...array]);\n          if (i === n - 2 && j === n - i - 2) setSortedStatus(true);\n        }, timeOut += 1000);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"arrayInput\",\n      type: \"text\",\n      onChange: updateSortingArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numberBoxArea\",\n      children: arrayToSort.map((arrayElement, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"  \", /*#__PURE__*/_jsxDEV(NumberBox, {\n          index: index,\n          content: arrayElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 73\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 54\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: bubbleSort,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateRandomNumber,\n      children: \" Random Numbers \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SortingComponent, \"IfMTEeCIEjkVEQyQIF9Mw5heK/s=\");\n\n_c = SortingComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingComponent\");","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/sortingComponent.js"],"names":["useEffect","useState","swap","SortingComponent","arrayToSort","setArrayToSort","operationIndex","setOperationIndex","compareColorIndex","swapColorIndex","sortedColorIndex","ithIndex","setIthIndex","jthIndex","setJthIndex","updateSortingArea","array","document","getElementById","value","split","map","arrayElement","parseInt","finalIndexes","i","length","push","comparedBoxesPosition","generateRandomNumber","setSortedStatus","randomNumberArray","Math","random","toString","setColor","index","backgroundColor","includes","NumberBox","props","content","bubbleSort","timeOut","n","j","setTimeout"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport \"./sortingComponent.css\";\nimport swap from \"./swap\";\n\nexport default function SortingComponent() {\n    let [arrayToSort,setArrayToSort] = useState([4,3,2,1,0,-1,-2,-3,-4]);\n    let [operationIndex,setOperationIndex] = useState({\n        compareColorIndex : [],\n        swapColorIndex : [],\n        sortedColorIndex : []\n    });\n    let [ithIndex,setIthIndex] = useState(0);\n    let [jthIndex,setJthIndex] = useState(0);\n\n    const updateSortingArea = () => {\n        let array = document.getElementById(\"arrayInput\").value.split(\",\");\n        array = array.map(arrayElement => parseInt(arrayElement));\n        setArrayToSort(array);\n    }   \n\n    useEffect(() => {\n        const finalIndexes = [];\n        for(let i = arrayToSort.length - 1 ; i > arrayToSort.length - ithIndex - 1 ; i-- ) finalIndexes.push(i);\n        const comparedBoxesPosition = (ithIndex === arrayToSort.length-2) ? [] : [jthIndex,jthIndex+1];\n\n        setOperationIndex({\n            compareColorIndex : comparedBoxesPosition,\n            swapColorIndex : comparedBoxesPosition,\n            sortedColorIndex : finalIndexes,\n        })\n    },[ithIndex,jthIndex,arrayToSort]);\n\n    const generateRandomNumber = () => {\n        setSortedStatus(false);\n        let randomNumberArray = [];\n        for(let i = 0 ; i < 10 ; i++) {\n            randomNumberArray.push(parseInt(Math.random() * 100));\n        }\n        document.getElementById(\"arrayInput\").value = randomNumberArray.toString(); \n        setArrayToSort(randomNumberArray);\n    }\n\n    const setColor = (index) => { \n        return {backgroundColor : (operationIndex.compareColorIndex.includes(index)? 'yellow' : \n                                  (operationIndex.swapColorIndex.includes(index)) ? 'pink' : \n                                  (operationIndex.sortedColorIndex.includes(index)) ? 'green' : 'grey') }; \n    }\n    \n    const NumberBox = (props) => {\n        return (\n            <div className=\"box\" id={props.index} style={setColor(props.index)}>\n                {props.content}\n            </div>\n        )\n    }   \n\n\n    const bubbleSort = () => {\n        let timeOut = 500;\n        const n = arrayToSort.length;\n        const array = arrayToSort;\n        for(let i = 0; i < n ; i++) {\n            for(let j = 0 ; j < n-i-1  ; j++) {\n                // eslint-disable-next-line no-loop-func\n                setTimeout(() => {\n                    setIthIndex(i);\n                    setJthIndex(j);\n                    if(array[j] > array[j+1]) swap(array,j,j+1);          \n                    setArrayToSort([...array]);\n                    if(i === n - 2 && j === n - i - 2) setSortedStatus(true);\n                },  timeOut += 1000);\n            }    \n        }\n    }   \n\n    return (\n        <div>\n        <input id=\"arrayInput\" type=\"text\" onChange={updateSortingArea} /> \n\n        <div className=\"numberBoxArea\"> \n            {arrayToSort.map((arrayElement,index) => <div key={index}>  <NumberBox index={index} content={arrayElement}  /> </div>)}\n        </div>\n        <button onClick={bubbleSort}>Start</button>\n        <button onClick={generateRandomNumber}> Random Numbers </button>\n       </div>\n    )       \n}"]},"metadata":{},"sourceType":"module"}