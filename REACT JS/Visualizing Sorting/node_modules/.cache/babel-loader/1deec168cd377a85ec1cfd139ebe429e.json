{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/components/algorithmSortingBox.js\",\n    _s = $RefreshSig$();\n\n// import { useState } from \"react\"\nimport { useRecoilState } from \"recoil\";\nimport { colorIndexesSettings, liveAlgorithmData, currentSelectedAlgorithmState, arrayToSortCommonState } from \"../common/commonData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AlgorithmBox(props) {\n  _s();\n\n  const currentActive = useRecoilState(currentSelectedAlgorithmState);\n  let array = useRecoilState(arrayToSortCommonState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"areaOfAlgorithmsVisualization\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortingBlockBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sortingInformationOne\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sortingHeader\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: /*#__PURE__*/_jsxDEV(\"u\", {\n              children: currentActive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 11,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sortingTime\",\n          children: \"Time : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numberBoxArea\",\n        children: array.map((arrayElement, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"  \", /*#__PURE__*/_jsxDEV(NumberBox, {\n            index: index,\n            content: arrayElement\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 75\n          }, this), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 56\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sortingInformationTwo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sortingSwaps\",\n          children: [\" Swaps : \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sortingComparison\",\n          children: [\"Comparisions : \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AlgorithmBox, \"UYsEOMmpdPjSXrwUjt2zcu9ehD0=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = AlgorithmBox;\n\nconst NumberBox = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    id: props.index,\n    style: setColor(props.index),\n    children: props.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = NumberBox;\n\nconst setColor = index => {\n  console.log(liveAlgorithmData.sortedStatus);\n  return {\n    backgroundColor: colorIndexesSettings.compareColorIndex.includes(index) ? 'pink' : colorIndexesSettings.swapColorIndex.includes(index) ? 'yellow' : colorIndexesSettings.sortedColorIndex.includes(index) || liveAlgorithmData.sortedStatus ? 'green' : 'grey'\n  };\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AlgorithmBox\");\n$RefreshReg$(_c2, \"NumberBox\");","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/components/algorithmSortingBox.js"],"names":["useRecoilState","colorIndexesSettings","liveAlgorithmData","currentSelectedAlgorithmState","arrayToSortCommonState","AlgorithmBox","props","currentActive","array","map","arrayElement","index","NumberBox","setColor","content","console","log","sortedStatus","backgroundColor","compareColorIndex","includes","swapColorIndex","sortedColorIndex"],"mappings":";;;AAAA;AACA,SAASA,cAAT,QAA+B,QAA/B;AACA,SAASC,oBAAT,EAA8BC,iBAA9B,EAAiDC,6BAAjD,EAAgFC,sBAAhF,QAA6G,sBAA7G;;AACA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACxC,QAAMC,aAAa,GAAGP,cAAc,CAACG,6BAAD,CAApC;AACA,MAAIK,KAAK,GAAGR,cAAc,CAACI,sBAAD,CAA1B;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCAA+B;AAAA,mCAAG;AAAA,wBAAIG;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACKC,KAAK,CAACC,GAAN,CAAU,CAACC,YAAD,EAAcC,KAAd,kBAAwB;AAAA,wCAAmB,QAAC,SAAD;AAAW,YAAA,KAAK,EAAEA,KAAlB;AAAyB,YAAA,OAAO,EAAED;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAAnB;AAAA,WAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,gBAAlC;AADL;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GApBuBN,Y;UACEL,c,EACVA,c;;;KAFQK,Y;;AAsBxB,MAAMO,SAAS,GAAIN,KAAD,IAAW;AACzB,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,EAAE,EAAEA,KAAK,CAACK,KAA/B;AAAsC,IAAA,KAAK,EAAEE,QAAQ,CAACP,KAAK,CAACK,KAAP,CAArD;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;MAAMF,S;;AAQN,MAAMC,QAAQ,GAAIF,KAAD,IAAW;AACxBI,EAAAA,OAAO,CAACC,GAAR,CAAYd,iBAAiB,CAACe,YAA9B;AACA,SAAO;AACPC,IAAAA,eAAe,EAAIjB,oBAAoB,CAACkB,iBAArB,CAAuCC,QAAvC,CAAgDT,KAAhD,IAAwD,MAAxD,GACAV,oBAAoB,CAACoB,cAArB,CAAoCD,QAApC,CAA6CT,KAA7C,CAAD,GAAwD,QAAxD,GACCV,oBAAoB,CAACqB,gBAArB,CAAsCF,QAAtC,CAA+CT,KAA/C,KAAyDT,iBAAiB,CAACe,YAA5E,GAA6F,OAA7F,GAAuG;AAHlH,GAAP;AAIH,CAND","sourcesContent":["// import { useState } from \"react\"\nimport { useRecoilState } from \"recoil\"\nimport { colorIndexesSettings,liveAlgorithmData, currentSelectedAlgorithmState ,arrayToSortCommonState} from \"../common/commonData\"\nexport default function AlgorithmBox(props) {\n    const currentActive = useRecoilState(currentSelectedAlgorithmState);\n    let array = useRecoilState(arrayToSortCommonState);\n    return(\n        <div className=\"areaOfAlgorithmsVisualization\">\n            <div className=\"sortingBlockBox\">\n                <div className=\"sortingInformationOne\">\n                    <div className=\"sortingHeader\"><b><u>{currentActive}</u></b></div>\n                    <div className=\"sortingTime\">Time : {}</div>\n                </div>\n                <div className=\"numberBoxArea\"> \n                    {array.map((arrayElement,index) => <div key={index}>  <NumberBox index={index} content={arrayElement}  /> </div>)}\n                </div>\n                <div className=\"sortingInformationTwo\">\n                    <div className=\"sortingSwaps\"> Swaps : {} </div>\n                    <div className=\"sortingComparison\">Comparisions : {} </div>\n                </div>  \n            </div>\n        </div>  \n    )\n}\n\nconst NumberBox = (props) => {\n    return (\n        <div className=\"box\" id={props.index} style={setColor(props.index)}>\n            {props.content}\n        </div>\n    )\n}\n\nconst setColor = (index) => { \n    console.log(liveAlgorithmData.sortedStatus);\n    return {\n    backgroundColor : (colorIndexesSettings.compareColorIndex.includes(index)? 'pink' : \n                      (colorIndexesSettings.swapColorIndex.includes(index)) ? 'yellow' : \n                      (colorIndexesSettings.sortedColorIndex.includes(index) || liveAlgorithmData.sortedStatus ) ? 'green' : 'grey') }; \n}"]},"metadata":{},"sourceType":"module"}