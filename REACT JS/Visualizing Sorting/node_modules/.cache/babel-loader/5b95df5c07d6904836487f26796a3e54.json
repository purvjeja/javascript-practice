{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/components/algorithmSortingBox.js\",\n    _s = $RefreshSig$();\n\n// import { useState } from \"react\"\nimport { useRecoilState } from \"recoil\";\nimport { colorIndexesSettings, liveAlgorithmData, listOfAlgorithms, currentSelectedAlgorithmState, arrayToSortCommonState } from \"../common/commonData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AlgorithmBox(props) {\n  _s();\n\n  const currentActiveId = useRecoilState(currentSelectedAlgorithmState);\n  const array = useRecoilState(arrayToSortCommonState);\n  console.log(arrayToSortCommonState.default);\n  console.log(liveAlgorithmData.arrayToSort);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"areaOfAlgorithmsVisualization\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortingBlockBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sortingInformationOne\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sortingHeader\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: /*#__PURE__*/_jsxDEV(\"u\", {\n              children: getAlgorithmName(currentActiveId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sortingTime\",\n          children: \"Time : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numberBoxArea\",\n        children: array.map((arrayElement, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(NumberBox, {\n            index: index,\n            content: arrayElement\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 74\n          }, this), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 56\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sortingInformationTwo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sortingSwaps\",\n          children: [\" Swaps : \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sortingComparison\",\n          children: [\"Comparisions : \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AlgorithmBox, \"m1E9hjVTO3UqCUIo9qb3SXfj52E=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = AlgorithmBox;\n\nconst getAlgorithmName = currentId => {\n  console.log(currentId);\n  console.log(listOfAlgorithms[1].name);\n};\n\nconst NumberBox = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    id: props.index,\n    style: setColor(props.index),\n    children: props.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = NumberBox;\n\nconst setColor = index => {\n  console.log(liveAlgorithmData.sortedStatus);\n  return {\n    backgroundColor: colorIndexesSettings.compareColorIndex.includes(index) ? 'pink' : colorIndexesSettings.swapColorIndex.includes(index) ? 'yellow' : colorIndexesSettings.sortedColorIndex.includes(index) || liveAlgorithmData.sortedStatus ? 'green' : 'grey'\n  };\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AlgorithmBox\");\n$RefreshReg$(_c2, \"NumberBox\");","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/Visualizing Sorting/src/components/algorithmSortingBox.js"],"names":["useRecoilState","colorIndexesSettings","liveAlgorithmData","listOfAlgorithms","currentSelectedAlgorithmState","arrayToSortCommonState","AlgorithmBox","props","currentActiveId","array","console","log","default","arrayToSort","getAlgorithmName","map","arrayElement","index","currentId","name","NumberBox","setColor","content","sortedStatus","backgroundColor","compareColorIndex","includes","swapColorIndex","sortedColorIndex"],"mappings":"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","sourcesContent":["// import { useState } from \"react\"\nimport { useRecoilState } from \"recoil\"\nimport { colorIndexesSettings,liveAlgorithmData,listOfAlgorithms, currentSelectedAlgorithmState ,arrayToSortCommonState} from \"../common/commonData\"\nexport default function AlgorithmBox(props) {\n    const currentActiveId = useRecoilState(currentSelectedAlgorithmState);\n    const array = useRecoilState(arrayToSortCommonState);\n    console.log(arrayToSortCommonState.default);\n    console.log(liveAlgorithmData.arrayToSort);\n    return(\n        <div className=\"areaOfAlgorithmsVisualization\">\n            <div className=\"sortingBlockBox\">\n                <div className=\"sortingInformationOne\">\n                    <div className=\"sortingHeader\"><b><u>{getAlgorithmName(currentActiveId)}</u></b></div>\n                    <div className=\"sortingTime\">Time : {}</div>\n                </div>\n                <div className=\"numberBoxArea\"> \n                    {array.map((arrayElement,index) => <div key={index}> <NumberBox index={index} content={arrayElement}  /> </div>)}\n                </div>\n                <div className=\"sortingInformationTwo\">\n                    <div className=\"sortingSwaps\"> Swaps : {} </div>\n                    <div className=\"sortingComparison\">Comparisions : {} </div>\n                </div>  \n            </div>\n        </div>  \n    )\n}\n\nconst getAlgorithmName = (currentId) => {\n    console.log(currentId);\n    console.log(listOfAlgorithms[1].name);\n}\n\nconst NumberBox = (props) => {\n    return (\n        <div className=\"box\" id={props.index} style={setColor(props.index)}>\n            {props.content}\n        </div>\n    )\n}\n\nconst setColor = (index) => { \n    console.log(liveAlgorithmData.sortedStatus);\n    return {\n    backgroundColor : (colorIndexesSettings.compareColorIndex.includes(index)? 'pink' : \n                      (colorIndexesSettings.swapColorIndex.includes(index)) ? 'yellow' : \n                      (colorIndexesSettings.sortedColorIndex.includes(index) || liveAlgorithmData.sortedStatus ) ? 'green' : 'grey') }; \n}"]},"metadata":{},"sourceType":"module"}